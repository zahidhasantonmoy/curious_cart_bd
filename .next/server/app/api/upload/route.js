"use strict";(()=>{var e={};e.id=998,e.ids=[998],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},4704:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>g,patchFetch:()=>h,requestAsyncStorage:()=>m,routeModule:()=>c,serverHooks:()=>x,staticGenerationAsyncStorage:()=>f});var a={};t.r(a),t.d(a,{POST:()=>d});var o=t(9303),s=t(8716),i=t(670),u=t(7070),p=t(7147),n=t(1017),l=t.n(n);async function d(e){try{let r=(await e.formData()).get("file");if(!r)return u.NextResponse.json({message:"No file uploaded"},{status:400});let t=Buffer.from(await r.arrayBuffer()),a=`${Date.now()}-${r.name}`,o=l().join(process.cwd(),"public/images",a);await p.promises.writeFile(o,t);let s=`/images/${a}`;return u.NextResponse.json({url:s},{status:200})}catch(e){return console.error("Error uploading file:",e),u.NextResponse.json({message:"File upload failed"},{status:500})}}let c=new o.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/upload/route",pathname:"/api/upload",filename:"route",bundlePath:"app/api/upload/route"},resolvedPagePath:"E:\\My_Projects\\Curious Cart BD\\src\\app\\api\\upload\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:m,staticGenerationAsyncStorage:f,serverHooks:x}=c,g="/api/upload/route";function h(){return(0,i.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:f})}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),a=r.X(0,[948,972],()=>t(4704));module.exports=a})();